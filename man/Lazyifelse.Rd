% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Misc.R
\name{Lazyifelse}
\alias{Lazyifelse}
\title{Lazy version of ifelse}
\usage{
Lazyifelse(test, yFun, yIn, nFun, nIn)
}
\arguments{
\item{test}{an object which can be coerced to logical}

\item{yFun, nFun}{Functions to be called when test evaluates to TRUE or FALSE respectively}

\item{yIn, nIn}{Arguments for yFun and nFun. Recycled if necessary}
}
\description{
When using ifelse, the return values are evaluated for all values, then discarded.
This causes problems when you want to check for valid inputs in test.
In this function, values are only evaluated when necessary:
yFun is called with yIn for test==TRUE, and
nFun is called with nIn for test==FALSE.
Missing (NA) values in test return NA< without calling either yFun or nFun
}
\details{
If you just want to return values, you can use the function \code{\link[base]{identity}}
}
\examples{
stats <- list(a=NA,
              b=list(time="1:00", speed=100))
besttimes <- Lazyifelse(is.na(stats), identity, NA, function(x) {sapply(x, `[[`, i='time')}, stats)
}
